spring.application.name=interview-feedback-service

# Database Configuration with defaults
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/instructai_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.transaction.jta.platform=${SPRING_JPA_PROPERTIES_HIBERNATE_TRANSACTION_JTA_PLATFORM:}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=${SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION:true}
spring.jpa.properties.hibernate.globally_quoted_identifiers=${SPRING_JPA_PROPERTIES_HIBERNATE_GLOBALLY_QUOTED_IDENTIFIERS:false}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

frontend.client=${FRONTEND_CLIENT:http://localhost:3000}
spring.jackson.serialization.fail-on-empty-beans=${SPRING_JACKSON_SERIALIZATION_FAIL_ON_EMPTY_BEANS:false}
spring.jackson.serialization.write-dates-as-timestamps=${SPRING_JACKSON_SERIALIZATION_WRITE_DATES_AS_TIMESTAMPS:false}

server.port=${SERVER_PORT:8007}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5
spring.data.redis.lettuce.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000

# API Configuration
gemini.api.base-url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
gemini.api.key=${GEMINI_API_KEY:AIzaSyAsyukBPOYO39DgAyFiHIS_0up_KC8eJaY}

# Security Configuration
jwt.secret=${JWT_SECRET:yourSecretKeyHereShouldBeVeryLongAndSecure}
jwt.expiration=${JWT_EXPIRATION:86400000}

spring.security.user.name=${SPRING_SECURITY_USER_NAME:admin}
spring.security.user.password=${SPRING_SECURITY_USER_PASSWORD:admin}

# Socket.IO Configuration
socketio.host=${SOCKETIO_HOST:0.0.0.0}
socketio.port=${SOCKETIO_PORT:9092}

# Logging Configuration
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql=OFF
logging.level.org.hibernate.orm.jdbc.bind=OFF
logging.level.org.hibernate.engine.transaction.internal=OFF
logging.level.org.hibernate.engine.jdbc.spi=OFF
logging.level.org.hibernate.engine.jdbc.batch=OFF
logging.level.org.springframework.data.redis=WARN
logging.level.com.screening.interviews=INFO

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true